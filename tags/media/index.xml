<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Media on ErebusBat</title>
    <link>http://www.erebusbat.com/tags/media/</link>
    <description>Recent content in Media on ErebusBat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Nov 2012 19:16:11 -0600</lastBuildDate>
    <atom:link href="http://www.erebusbat.com/tags/media/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ffmpeg Field Notes</title>
      <link>http://www.erebusbat.com/2012/11/ffmpeg-field-notes/</link>
      <pubDate>Sat, 03 Nov 2012 19:16:11 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2012/11/ffmpeg-field-notes/</guid>
      <description>

&lt;p&gt;This is a conversation of an old DokuWiki post where I would just dump ffmpeg commands for my reference.  It really needs to be split into multiple pages, but might be useful to someone in the raw form.&lt;/p&gt;

&lt;h3 id=&#34;links:26a07dde200fd0da08764cfe96545b35&#34;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://manpages.ubuntu.com/manpages/precise/en/man1/ffmpeg.1.html&#34;&gt;Man Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ffmpeg.org/general.html#Video-Codecs&#34;&gt;Codec Listing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rodrigopolo.com/ffmpeg/cheats.html&#34;&gt;http://rodrigopolo.com/ffmpeg/cheats.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ubuntuforums.org/showthread.php?t=2017284&#34;&gt;http://ubuntuforums.org/showthread.php?t=2017284&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://developer.apple.com/library/mac/#qa/qa1534/_index.html&#34;&gt;Create CAF files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.catswhocode.com/blog/19-ffmpeg-commands-for-all-needs&#34;&gt;http://www.catswhocode.com/blog/19-ffmpeg-commands-for-all-needs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;oneliners:26a07dde200fd0da08764cfe96545b35&#34;&gt;Oneliners&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# File Info
ffmpeg -i &amp;lt;file&amp;gt;

# Convert (not transcode)
ffmpeg -i &amp;lt;file&amp;gt; -c copy &amp;lt;file.out&amp;gt;

# Convert lowbitrate -&amp;gt; 128k (to get around iCloud)
ffmpeg -i in.m4a -b:a 128k out.mp3

# Convert, but transcode audio to 2ch AC3
ffmpeg -i &amp;lt;file.mkv&amp;gt; -c:v copy -c:a ac3 -ac 2 &amp;lt;file.mp4&amp;gt;

# Extract Audio Stream (0:1 = 0-First input file  1-Second Stream)
ffmpeg -i Clue.m4v -map 0:1 -acodec copy Clue_Audio.m4a

# Extract Audio Stream (0:1 = 0-First input file  1-Second Stream)
#   Copy 5 minutes from 25 min in (1500s=25m, 300s=5m)
ffmpeg -i Clue.m4v -map 0:1 -acodec copy -ss 1500 -t 300 Clue_Audio.m4a

# Convert all MP3 files to AAC, then rename to M4B (for audiobooks)
for f in *.mp3; do
  ffmpeg -i $f -c:a libfdk_aac ${f:r}.m4a &amp;amp;&amp;amp; \
  mv ${f:r}.m4a ${f:r}.m4b
done
for f in *.mp3; do ffmpeg -i $f -f adts -c:a libfdk_aac ${f:r}.m4b; done
for f in *.mp3; do
  ffmpeg -i $f -acodec libfdk_aac -b:a 96k -f adts ${f:r}.m4b
done

# Convert to AAC/M4A that will import into iTunes
ffmpeg -i Input.mp3 -c:a libfdk_aac Test96.m4a
#     If you want a different file extension, specify iPod format:
ffmpeg -i Input.mp3 -c:a libfdk_aac -f ipod -b:a 96k Test96.m4b

# Convert all FLAC-&amp;gt;M4A, using separate folders
mkdir aac; mkdir processed; for f in *.flac; do
  ffmpeg -i $f -acodec libfdk_aac -b:a 256k &amp;quot;aac/${f:t:r}.m4a&amp;quot; &amp;amp;&amp;amp; \
  mv $f processed/
done
# Simple FLAC conversion
for f in *.flac; do
  ffmpeg -i $f -c:a libfdk_aac -ab 256k ${f:r}.m4a
done

# Take an input that has 0:0-h264 0:1-ac3 and output a file that copies those and adds an AAC channel
# Notice the duplicated input, this is so we can copy one audio, but process the other
ffmpeg \
-i 21.m4v \
-i 21.m4v \
-map 0:0 \
-c:v copy \
-map 0:1 \
-c:a:0 copy \
-map 1:1 \
-c:a:1 libfdk_aac
21_fixed.m4v

# Convert flash demo video to h264/m4v mono
ffmpeg \
-i dd6796a8c742c83457e1d7a32985cc5e.flv \
-c:v h264 \
-c:a libfdk_aac \
-ac:1 1 \
-ab:1 48k
SCID-workshop2.m4v

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;video-in-1-stream:26a07dde200fd0da08764cfe96545b35&#34;&gt;Video in 1 stream&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ffmpeg -i video.mkv -i video.mkv \
  -map 0:1 -c:v:0 copy \                  # Copy video from stream 1
  -map 0:0 -c:a:0 copy \                  # Copy audio from stream 0
  -map 1:0 -c:a:1 libfdk_aac -ac:2 2 \    # Convert audio in stream 0 to AAC
  video.m4v
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;helper-functions:26a07dde200fd0da08764cfe96545b35&#34;&gt;Helper Functions&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# This is a ZSH function that you can use as a shortcut when your input file looks like:
#    Input #0, matroska,webm, from &#39;The.Americans.2013.S01E01.720p.WEB-DL-LFF.mkv&#39;:
#      Metadata:
#        creation_time   : 2013-02-15 09:11:09
#      Duration: 01:09:02.18, start: 0.000000, bitrate: 4365 kb/s
#        Stream #0:0(eng): Video: h264 (High), yuv420p, 1280x718 [SAR 1:1 DAR 640:359], 23.98 fps, 23.98 tbr, 1k tbn, 2k tbc #    (default)
#        Stream #0:1(eng): Audio: ac3, 48000 Hz, 5.1(side), s16, 384 kb/s (default)
#        Stream #0:2: Subtitle: subrip (default)

## Video-AudioAC3
function ff264_vac3() {
  ffmpeg \
  -i $1 \
  -i $1 \
  -map 0:0 \
  -c:v:0 copy \
  -map 0:1 \
  -c:a:0 copy \
  -map 1:1 \
  -c:a:1 libfdk_aac \
  -ac:2 2 ${1:r}.m4v
}
## AudioAC3-Video
function ff264_ac3v() {
  ffmpeg \
  -i $1 \
  -i $1 \
  -map 0:1 \
  -c:v:0 copy \
  -map 0:0 \
  -c:a:0 copy \
  -map 1:0 \
  -c:a:1 libfdk_aac \
  -ac:2 2 ${1:r}.m4v
}

## Full Conversion on all channels, if WMV or DIVX or whatever, assumes audio is on second(1) stream
function ff264_full() {
  ffmpeg \
  -i $1 \
  -i $1 \
  -map 0:1 \
  -c:v:0 h264 \
  -map 0:0 \
  -c:a:0 ac3 \
  -map 1:1 \
  -c:a:1 libfdk_aac \
  -ac:2 2
  ${1:r}.m4v
}

## Full Audio Conversion, such as when the MKV
#  is a BluRay rip and only has DTS
function ff264_audio_full() {
  ffmpeg \
  -i $1 \
  -i $1 \
  -map 0:0 \
  -c:v:0 copy \
  -map 0:1 \
  -ac:1 2 \
  -c:a:0 libfdk_aac \
  -map 1:1 \
  -c:a:1 ac3
  ${1:r}.m4v
}
## Convert &amp;amp; Move functions
function cvmv_ff264_vac3() { ff264_vac3 $1 &amp;amp;&amp;amp; mvmedia ${1:r}.m4v }
function cvmv_ff264_ac3v() { ff264_ac3v $1 &amp;amp;&amp;amp; mvmedia ${1:r}.m4v }

# Batch convert &amp;amp; move files
for f in *.mkv; do ff264_vac3 $f &amp;amp;&amp;amp; mvmedia ${f:r}.m4v;  done
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;dts-bluray:26a07dde200fd0da08764cfe96545b35&#34;&gt;DTS/BluRay&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ffmpeg -i LongKissGoodnight.mkv
Stream #0:0(eng): Video: h264 (High), yuv420p, 1280x536, SAR 1:1 DAR 160:67, 23.98 fps, 23.98 tbr, 1k tbn, 47.95 tbc (default)
    Metadata:
      title           : The Long Kiss Goodnight (1996)
    Stream #0:1(eng): Audio: dts (DTS), 48000 Hz, 5.1(side), fltp, 1536 kb/s (default)
    Metadata:
      title           : DTS 5.1 1.5 Mbps
    Stream #0:2(eng): Subtitle: subrip

# AppleTV doesn&#39;t support DTS (does it?) so we output AAC (2ch) and AC3 (5.1)
$ ffmpeg -i LongKissGoodnight.mkv -i LongKissGoodnight.mkv \
  -map 0:0 -c:v:0 copy \
  -map 0:1 -ac:1 2 -c:a:0 libfdk_aac \
  -map 1:1 -c:a:1 ac3 LongKissGoodnight.m4v
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;concatenate-files:26a07dde200fd0da08764cfe96545b35&#34;&gt;Concatenate Files&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://trac.ffmpeg.org/wiki/How%20to%20concatenate%20(join,%20merge)%20media%20files&#34;&gt;https://trac.ffmpeg.org/wiki/How%20to%20concatenate%20(join,%20merge)%20media%20files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for f in *.wav; do echo &amp;quot;file &#39;$f&#39;&amp;quot; &amp;gt;&amp;gt; mylist.txt; done
ffmpeg -f concat -i mylist.txt -c copy output.wav
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install:26a07dde200fd0da08764cfe96545b35&#34;&gt;Install&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install ffmpeg \
--with-fdk-aac \
--with-ffplay \
--with-freetype \
--with-frei0r \
--with-libass \
--with-libcaca \
--with-libvo-aacenc \
--with-libvorbis \
--with-libvpx \
--with-opencore-amr \
--with-openjpeg \
--with-openssl \
--with-opus \
--with-rtmpdump \
--with-schroedinger \
--with-speex \
--with-theora \
--with-tools
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rails on ErebusBat</title>
    <link>http://www.erebusbat.com/tags/rails/</link>
    <description>Recent content in Rails on ErebusBat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Aug 2015 13:29:12 -0600</lastBuildDate>
    <atom:link href="http://www.erebusbat.com/tags/rails/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Install TinyTDS Gem on OSX 10.10 Yosemite</title>
      <link>http://www.erebusbat.com/2015/08/install-tinytds-gem-on-osx-10.10-yosemite/</link>
      <pubDate>Tue, 04 Aug 2015 13:29:12 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2015/08/install-tinytds-gem-on-osx-10.10-yosemite/</guid>
      <description>

&lt;p&gt;There are a couple of &lt;a href=&#34;http://stackoverflow.com/questions/26613673/error-installing-tiny-tds-on-osx-10-10-yosemite&#34;&gt;howtos&lt;/a&gt; out there on how to fix the dreaded &lt;strong&gt;ERROR: Failed to build gem native extension.&lt;/strong&gt; when running &lt;code&gt;gem install tiny_tds&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This one will fix it without having to force link &lt;code&gt;libiconv&lt;/code&gt; which is not a good thing to do.&lt;/p&gt;

&lt;h3 id=&#34;prerequisites:405ae8145516492c8d939bdd28513b34&#34;&gt;Prerequisites&lt;/h3&gt;

&lt;p&gt;First you want to make sure that you have &lt;code&gt;freetds&lt;/code&gt; and &lt;code&gt;libiconv&lt;/code&gt; installed in &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;.  I already had these installed so YMMV on this step:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install libiconv
brew install freetds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is normal for &lt;code&gt;libiconv&lt;/code&gt; to complain that it is keg only, that is the whole point.&lt;/p&gt;

&lt;h3 id=&#34;install-tiny-tds:405ae8145516492c8d939bdd28513b34&#34;&gt;Install tiny_tds&lt;/h3&gt;

&lt;p&gt;Now it is just a simply matter of telling &lt;code&gt;gem install&lt;/code&gt; where &lt;code&gt;libiconv&lt;/code&gt; and &lt;code&gt;freetds&lt;/code&gt; are located.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gem install tiny_tds -- --with-iconv-dir=$(brew --prefix libiconv) \
  --with-freetds-dir=$(brew --prefix freetds)
Building native extensions.  This could take a while...
Successfully installed tiny_tds-0.6.2
1 gem installed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: Do &lt;em&gt;not&lt;/em&gt; forget the double hyphen (&lt;code&gt;--&lt;/code&gt;) between the gem install
command and the options.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rails: Allow users to use asterisks as wildcards.</title>
      <link>http://www.erebusbat.com/2015/07/rails-allow-users-to-use-asterisks-as-wildcards./</link>
      <pubDate>Wed, 01 Jul 2015 10:17:12 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2015/07/rails-allow-users-to-use-asterisks-as-wildcards./</guid>
      <description>

&lt;p&gt;Simple method that iterates a hash and any string values that contain an asterisk
are changed to a percent sign.  It will &lt;em&gt;not&lt;/em&gt; iterate to sub hashes.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def fix_asterisks hash
  hash = hash.dup
  hash.each_pair do |key, val|
    if val.is_a?(String) &amp;amp;&amp;amp; val =~ /\*/
      hash[key] = val.gsub(/\*/, &#39;%&#39;)
    end
  end
end

def controller_action
  query = QueryObject.new(fix_asterisks(params[:query]))
end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;examples:340c4c4ca88c80de8fce1a1ce85fedac&#34;&gt;Examples&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def controller_action
  query = QueryObject.new(fix_asterisks(params[:query]))
  ...

  # params[:query][:last_name] = &amp;quot;smith*&amp;quot;
  p query.last_name
  # =&amp;gt; &amp;quot;smith%&amp;quot;

  # params[:query][:last_name] = &amp;quot;smith%&amp;quot;
  p query.last_name
  # =&amp;gt; &amp;quot;smith%&amp;quot;

  # params[:query][:days] = &amp;quot;13&amp;quot;
  p query.days
  # =&amp;gt; &amp;quot;13&amp;quot;
  ...

  objs = Customer.where([&#39;last_name like ?&#39;, query.last_name])
end
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Ruby Bundler Field Notes</title>
      <link>http://www.erebusbat.com/2014/04/ruby-bundler-field-notes/</link>
      <pubDate>Tue, 08 Apr 2014 14:18:07 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2014/04/ruby-bundler-field-notes/</guid>
      <description>

&lt;h2 id=&#34;links:bc6aa8c0f0fcd2cbdf86dac3c7ca596d&#34;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bundler.io/v1.6/bundler_setup.html&#34;&gt; Bundler Setup Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bundler.io/v1.6/git.html&#34;&gt; Bundler with Git Repos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bundler.io/v1.6/gemfile.html&#34;&gt; Gemfile docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;setup:bc6aa8c0f0fcd2cbdf86dac3c7ca596d&#34;&gt;Setup&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bundle init
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;script-rb:bc6aa8c0f0fcd2cbdf86dac3c7ca596d&#34;&gt;&lt;code&gt;script.rb&lt;/code&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;#!/usr/bin/env ruby
require &#39;rubygems&#39;
require &#39;bundler/setup&#39;
Bundler.require

# Or
Bundler.require(:group)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;gemfile:bc6aa8c0f0fcd2cbdf86dac3c7ca596d&#34;&gt;&lt;code&gt;Gemfile&lt;/code&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;source &#39;https://rubygems.org&#39;    # Default

gem &#39;nokogiri&#39;, :git =&amp;gt; &#39;git://github.com/tenderlove/nokogiri.git&#39;,
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Capistrano</title>
      <link>http://www.erebusbat.com/2013/01/capistrano/</link>
      <pubDate>Tue, 15 Jan 2013 22:44:00 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2013/01/capistrano/</guid>
      <description>

&lt;h2 id=&#34;capify-a-project:f8c45d657a54df5664f40d304c68ea31&#34;&gt;Capify a Project&lt;/h2&gt;

&lt;p&gt;This page describes the basic method you can use to &lt;em&gt;capify&lt;/em&gt; a project to maintain a very flexible and easily maintainable deploy process.  This was documented/inspired in &lt;a href=&#34;http://railscasts.com/episodes/337-capistrano-recipes&#34;&gt;RailsCast #337&lt;/a&gt; Capistrano Recipes.&lt;/p&gt;

&lt;h2 id=&#34;assumptions:f8c45d657a54df5664f40d304c68ea31&#34;&gt;Assumptions&lt;/h2&gt;

&lt;p&gt;This is a very opinionated process.  Some things can be easily changed, they are listed as &lt;em&gt;suggested&lt;/em&gt; as below.  Other things can not easily be changed, they are listed as &lt;em&gt;required&lt;/em&gt; below.&lt;/p&gt;

&lt;h2 id=&#34;web-application-server:f8c45d657a54df5664f40d304c68ea31&#34;&gt;Web/Application Server&lt;/h2&gt;

&lt;p&gt;The required configuration is nginx/unicorn.  However adding/changing these should just be a matter of substituting recipes that yet to be written.&lt;/p&gt;

&lt;h3 id=&#34;database:f8c45d657a54df5664f40d304c68ea31&#34;&gt;Database&lt;/h3&gt;

&lt;p&gt;Currently there are no recipes written for any database; however plans are to support MySQL and PostgreSQL&lt;/p&gt;

&lt;h3 id=&#34;server:f8c45d657a54df5664f40d304c68ea31&#34;&gt;Server&lt;/h3&gt;

&lt;p&gt;A debian based linux server is required as all of the package management tasks use &lt;code&gt;apt&lt;/code&gt; commands.  Also a deploy user must be created with sudo rights before anything can be deployed.  The application will run under this user and it &lt;em&gt;should&lt;/em&gt; be the same name as the project to keep everything straight.  Although a &amp;ldquo;set :user, &amp;lsquo;deploy&amp;rsquo; &amp;ldquo; can override that.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deployment via Capistrano Recipes</title>
      <link>http://www.erebusbat.com/2013/01/deployment-via-capistrano-recipes/</link>
      <pubDate>Tue, 15 Jan 2013 17:38:45 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2013/01/deployment-via-capistrano-recipes/</guid>
      <description>

&lt;h2 id=&#34;deployment-via-capistrano-recipes:68617cf050e3328f80fa5a8383c74cb3&#34;&gt;Deployment via Capistrano Recipes&lt;/h2&gt;

&lt;p&gt;This page documents what you need to do to get a project up and running on a 100% fresh installed server.
This assumes that you are using Capistrano Recipes as documented/inspired in &lt;a href=&#34;http://railscasts.com/episodes/337-capistrano-recipes&#34;&gt;RailsCast #337&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It does not help you capify a project.&lt;/p&gt;

&lt;h2 id=&#34;server-prep:68617cf050e3328f80fa5a8383c74cb3&#34;&gt;Server Prep&lt;/h2&gt;

&lt;p&gt;You must create an admin deploy user, everything else will be handled by Capistrano.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo adduser deploy
sudo usermod -a -G sudo deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should do a &lt;code&gt;shh-copy-id&lt;/code&gt; or &lt;code&gt;.ssh/config&lt;/code&gt; setup now.&lt;/p&gt;

&lt;h2 id=&#34;capistrano-tasks:68617cf050e3328f80fa5a8383c74cb3&#34;&gt;Capistrano Tasks&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /path/to/app
cap deploy:install deploy:setup deploy:cold
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
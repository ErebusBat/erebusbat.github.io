<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Field Notes on ErebusBat</title>
    <link>http://www.erebusbat.com/tags/field-notes/</link>
    <description>Recent content in Field Notes on ErebusBat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Jun 2014 21:17:59 -0600</lastBuildDate>
    <atom:link href="http://www.erebusbat.com/tags/field-notes/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PostgreSQL Field Notes</title>
      <link>http://www.erebusbat.com/2014/06/postgresql-field-notes/</link>
      <pubDate>Fri, 27 Jun 2014 21:17:59 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2014/06/postgresql-field-notes/</guid>
      <description>&lt;p&gt;PostgreSQL Field Notes&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ export PGDATA=/usr/local/var/postgres
$ pg_ctl status
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>AWK Field Notes</title>
      <link>http://www.erebusbat.com/2014/06/awk-field-notes/</link>
      <pubDate>Thu, 19 Jun 2014 13:52:50 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2014/06/awk-field-notes/</guid>
      <description>

&lt;p&gt;Misc notes and snippets in a &lt;em&gt;Field Notes&lt;/em&gt; style&lt;/p&gt;

&lt;h4 id=&#34;links:6929c066a1635d550302642d3d7c34ff&#34;&gt;Links&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/a/6546314/3683&#34;&gt;http://stackoverflow.com/a/6546314/3683&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;quick:6929c066a1635d550302642d3d7c34ff&#34;&gt;Quick&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Get amount of free mem (in -m MB)
$ free -m | grep -E &#39;^Mem&#39; | awk &#39;{print $4}&#39;
$ free -m | awk &#39;/^Mem/ {print $4}&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>MySQL Dump Field Notes</title>
      <link>http://www.erebusbat.com/2014/04/mysql-dump-field-notes/</link>
      <pubDate>Tue, 15 Apr 2014 20:07:28 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2014/04/mysql-dump-field-notes/</guid>
      <description>

&lt;p&gt;Misc notes and snippets in a &lt;em&gt;Field Notes&lt;/em&gt; style&lt;/p&gt;

&lt;h4 id=&#34;large-tables:88db73746f7b201d5d160d4ae8934898&#34;&gt;Large Tables&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/5666784/how-can-i-slow-down-a-mysql-dump-as-to-not-affect-current-load-on-the-server&#34;&gt;http://stackoverflow.com/questions/5666784/how-can-i-slow-down-a-mysql-dump-as-to-not-affect-current-load-on-the-server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# http://stackoverflow.com/a/12142501/3683
mysqldump -u USER -p --single-transaction --quick \
  --lock-tables=false DATABASE | gzip &amp;gt; OUTPUT.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;examples:88db73746f7b201d5d160d4ae8934898&#34;&gt;Examples&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mysqldump [options] [db_name [tbl_name ...]]

# Copy a subset of content to another server (-t no create table, -i add info comments):
mysqldump -i -t -uroot database_development contents \
  --where=&amp;quot;url LIKE &#39;corporate/protected%&#39;&amp;quot; \
  | ssh devsrv &amp;quot;mysql database_production&amp;quot;

mysqldump database_production widgets \
  | bzip2 -c &amp;gt; production_widgets.sql.bz2

bzcat db/sql/production_widgets.sql.bz2 \
  | mysql -uroot database_development

# Dump table over SSH tunnel w/o temp file
ssh prodsrv &amp;quot;mysqldump database_production widgets&amp;quot; \
  | mysql -uroot database_development
ssh prodsrv &amp;quot;mysqldump database_production contents&amp;quot; \
  | mysql -uroot database_development

# Dump table over SSH, compress
ssh prodsrv &amp;quot;mysqldump database_production widgets \
  | gzip&amp;quot; \
  | gzip -d \
  | mysql -uroot database_development

# Dump table to date/time stamped GPG encrypted file
mysqldump database_production widgets \
  | gpg -e -r user@domain.com -o &amp;quot;widgets-$(date +%Y%m%d-%H%M%S).sql.gpg&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;move-tables-data-around:88db73746f7b201d5d160d4ae8934898&#34;&gt;Move tables/data around&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Copy table from local server to remote server, compressing the transport
mysqldump -uroot database_development portal_agencies \
  | gzip \
  | ssh prodsrv &amp;quot;gzip -d | mysql database_production&amp;quot;

# Copy table from remote server to local, compress
ssh prodsrv &amp;quot;mysqldump database_production portal_agencies | gzip&amp;quot; \
  | gzip -d \
  | mysql -uroot database_development

# Copy table from production to file on local workstation
ssh prodsrv &amp;quot;mysqldump database_production --comments widgets \
  | bzip2 -c&amp;quot; &amp;gt; widgets.sql.bz2
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Microsoft SQL Server Field Notes</title>
      <link>http://www.erebusbat.com/2014/03/microsoft-sql-server-field-notes/</link>
      <pubDate>Wed, 26 Mar 2014 16:41:06 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2014/03/microsoft-sql-server-field-notes/</guid>
      <description>

&lt;p&gt;Random field notes on Microsoft SQL Server&lt;/p&gt;

&lt;h2 id=&#34;misc-snippets:a34e8838774afbd86c31d4cce476018f&#34;&gt;Misc Snippets&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Create new table from select:
SELECT [WHFCustomerID], [CustomerNumber], [LastName], [FirstName], [MiddleInitial], [Address], [City], [State], [Zip], [PhoneNumber], [SocialSecurityNumber], [MedicaidID], [EmailAddress], [DateOfBirth], [Sex], [DateCreated], [DateUpdated], [WHFConvertDate], [MayoEventCode], [MayoUpdateDate]
INTO Roundup_Test.dbo.Customers
FROM Roundup.[dbo].[Customers];

-- Insert into existing table from select
INSERT INTO Customers
SELECT [WHFCustomerID], [CustomerNumber], [LastName], [FirstName], [MiddleInitial], [Address], [City], [State], [Zip], [PhoneNumber], [SocialSecurityNumber], [MedicaidID], [EmailAddress], [DateOfBirth], [Sex], [DateCreated], [DateUpdated], [WHFConvertDate], [MayoEventCode], [MayoUpdateDate]
FROM Roundup.[dbo].[Customers];

--Strip time component
update C
SET C.DateOfBirth=DATEADD(dd, DATEDIFF(dd, 0, C.DateOfBirth), 0)
from Customers C
where C.CustomerNumber like &#39;W85%&#39;;

-- Display date as mm/dd/yyyy (text)
select convert(char(10),getdate(), 0),101) as Today
select convert(char(10),DATEADD(dd, DATEDIFF(dd, 0, CD.DateCollected), 0),101) as DateCollected

-- bundle_participants

-- TRUNCATE TABLE Roundup_Test.dbo.bundle_participants;
-- DROP TABLE Roundup_Test.dbo.bundle_participants;

SET IDENTITY_INSERT Roundup_Test.dbo.bundle_participants ON;
INSERT INTO Roundup_Test.dbo.bundle_participants
(id,portal_id, family_id, family_seq_number, customer_number, member_id, ssn, dob, last_name, first_name, member_class, relationship_code, relationship_desc, is_split, address, city, state, zipcode, start_date, end_date, agency_code, gender, activation_date, sub_agency1, sub_agency2, is_termed, member_uid, phone_number, email, bundle_id, matched_by, created_at, updated_at )
SELECT *
  FROM Roundup.dbo.bundle_participants;
SET IDENTITY_INSERT Roundup_Test.dbo.bundle_participants OFF;


delete from Roundup.dbo.bundle_participants where portal_id=1;
INSERT INTO Roundup.dbo.bundle_participants
SELECT  [portal_id], [family_id], [family_seq_number], [customer_number], [member_id], [ssn], [dob], [last_name], [first_name], [member_class], [relationship_code], [relationship_desc], [is_split], [address], [city], [state], [zipcode], [start_date], [end_date], [agency_code], [gender], [activation_date], [sub_agency1], [sub_agency2], [is_termed], [phone_number], [email], [bundle_id], [matched_by], [created_at], [updated_at]
	FROM Roundup_test.[dbo].[bundle_participants]
 where portal_id=1;



--Update with JOIN
-- http://stackoverflow.com/questions/1604091/update-a-table-using-join-in-sql-server
UPDATE t1
  SET t1.CalculatedColumn = t2.[Calculated Column]
  FROM dbo.Table1 AS t1
  INNER JOIN dbo.Table2 AS t2
  ON t1.CommonField = t2.[Common Field]
  WHERE t1.BatchNo = &#39;110&#39;;

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ddl-management:a34e8838774afbd86c31d4cce476018f&#34;&gt;DDL/Management&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Find FK References
SELECT
    f.name AS ForeignKey,
    OBJECT_NAME(f.parent_object_id) AS TableName,
    COL_NAME(fc.parent_object_id,
    fc.parent_column_id) AS ColumnName,
    OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,
    COL_NAME(fc.referenced_object_id,
    fc.referenced_column_id) AS ReferenceColumnName
FROM
    sys.foreign_keys AS f
    INNER JOIN sys.foreign_key_columns AS fc ON f.OBJECT_ID = fc.constraint_object_id
ORDER BY ReferenceTableName;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ffmpeg Field Notes</title>
      <link>http://www.erebusbat.com/2012/11/ffmpeg-field-notes/</link>
      <pubDate>Sat, 03 Nov 2012 19:16:11 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2012/11/ffmpeg-field-notes/</guid>
      <description>

&lt;p&gt;This is a conversation of an old DokuWiki post where I would just dump ffmpeg commands for my reference.  It really needs to be split into multiple pages, but might be useful to someone in the raw form.&lt;/p&gt;

&lt;h3 id=&#34;links:26a07dde200fd0da08764cfe96545b35&#34;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://manpages.ubuntu.com/manpages/precise/en/man1/ffmpeg.1.html&#34;&gt;Man Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ffmpeg.org/general.html#Video-Codecs&#34;&gt;Codec Listing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rodrigopolo.com/ffmpeg/cheats.html&#34;&gt;http://rodrigopolo.com/ffmpeg/cheats.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ubuntuforums.org/showthread.php?t=2017284&#34;&gt;http://ubuntuforums.org/showthread.php?t=2017284&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://developer.apple.com/library/mac/#qa/qa1534/_index.html&#34;&gt;Create CAF files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.catswhocode.com/blog/19-ffmpeg-commands-for-all-needs&#34;&gt;http://www.catswhocode.com/blog/19-ffmpeg-commands-for-all-needs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;oneliners:26a07dde200fd0da08764cfe96545b35&#34;&gt;Oneliners&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# File Info
ffmpeg -i &amp;lt;file&amp;gt;

# Convert (not transcode)
ffmpeg -i &amp;lt;file&amp;gt; -c copy &amp;lt;file.out&amp;gt;

# Convert lowbitrate -&amp;gt; 128k (to get around iCloud)
ffmpeg -i in.m4a -b:a 128k out.mp3

# Convert, but transcode audio to 2ch AC3
ffmpeg -i &amp;lt;file.mkv&amp;gt; -c:v copy -c:a ac3 -ac 2 &amp;lt;file.mp4&amp;gt;

# Extract Audio Stream (0:1 = 0-First input file  1-Second Stream)
ffmpeg -i Clue.m4v -map 0:1 -acodec copy Clue_Audio.m4a

# Extract Audio Stream (0:1 = 0-First input file  1-Second Stream)
#   Copy 5 minutes from 25 min in (1500s=25m, 300s=5m)
ffmpeg -i Clue.m4v -map 0:1 -acodec copy -ss 1500 -t 300 Clue_Audio.m4a

# Convert all MP3 files to AAC, then rename to M4B (for audiobooks)
for f in *.mp3; do
  ffmpeg -i $f -c:a libfdk_aac ${f:r}.m4a &amp;amp;&amp;amp; \
  mv ${f:r}.m4a ${f:r}.m4b
done
for f in *.mp3; do ffmpeg -i $f -f adts -c:a libfdk_aac ${f:r}.m4b; done
for f in *.mp3; do
  ffmpeg -i $f -acodec libfdk_aac -b:a 96k -f adts ${f:r}.m4b
done

# Convert to AAC/M4A that will import into iTunes
ffmpeg -i Input.mp3 -c:a libfdk_aac Test96.m4a
#     If you want a different file extension, specify iPod format:
ffmpeg -i Input.mp3 -c:a libfdk_aac -f ipod -b:a 96k Test96.m4b

# Convert all FLAC-&amp;gt;M4A, using separate folders
mkdir aac; mkdir processed; for f in *.flac; do
  ffmpeg -i $f -acodec libfdk_aac -b:a 256k &amp;quot;aac/${f:t:r}.m4a&amp;quot; &amp;amp;&amp;amp; \
  mv $f processed/
done
# Simple FLAC conversion
for f in *.flac; do
  ffmpeg -i $f -c:a libfdk_aac -ab 256k ${f:r}.m4a
done

# Take an input that has 0:0-h264 0:1-ac3 and output a file that copies those and adds an AAC channel
# Notice the duplicated input, this is so we can copy one audio, but process the other
ffmpeg \
-i 21.m4v \
-i 21.m4v \
-map 0:0 \
-c:v copy \
-map 0:1 \
-c:a:0 copy \
-map 1:1 \
-c:a:1 libfdk_aac
21_fixed.m4v

# Convert flash demo video to h264/m4v mono
ffmpeg \
-i dd6796a8c742c83457e1d7a32985cc5e.flv \
-c:v h264 \
-c:a libfdk_aac \
-ac:1 1 \
-ab:1 48k
SCID-workshop2.m4v

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;video-in-1-stream:26a07dde200fd0da08764cfe96545b35&#34;&gt;Video in 1 stream&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ffmpeg -i video.mkv -i video.mkv \
  -map 0:1 -c:v:0 copy \                  # Copy video from stream 1
  -map 0:0 -c:a:0 copy \                  # Copy audio from stream 0
  -map 1:0 -c:a:1 libfdk_aac -ac:2 2 \    # Convert audio in stream 0 to AAC
  video.m4v
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;helper-functions:26a07dde200fd0da08764cfe96545b35&#34;&gt;Helper Functions&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# This is a ZSH function that you can use as a shortcut when your input file looks like:
#    Input #0, matroska,webm, from &#39;The.Americans.2013.S01E01.720p.WEB-DL-LFF.mkv&#39;:
#      Metadata:
#        creation_time   : 2013-02-15 09:11:09
#      Duration: 01:09:02.18, start: 0.000000, bitrate: 4365 kb/s
#        Stream #0:0(eng): Video: h264 (High), yuv420p, 1280x718 [SAR 1:1 DAR 640:359], 23.98 fps, 23.98 tbr, 1k tbn, 2k tbc #    (default)
#        Stream #0:1(eng): Audio: ac3, 48000 Hz, 5.1(side), s16, 384 kb/s (default)
#        Stream #0:2: Subtitle: subrip (default)

## Video-AudioAC3
function ff264_vac3() {
  ffmpeg \
  -i $1 \
  -i $1 \
  -map 0:0 \
  -c:v:0 copy \
  -map 0:1 \
  -c:a:0 copy \
  -map 1:1 \
  -c:a:1 libfdk_aac \
  -ac:2 2 ${1:r}.m4v
}
## AudioAC3-Video
function ff264_ac3v() {
  ffmpeg \
  -i $1 \
  -i $1 \
  -map 0:1 \
  -c:v:0 copy \
  -map 0:0 \
  -c:a:0 copy \
  -map 1:0 \
  -c:a:1 libfdk_aac \
  -ac:2 2 ${1:r}.m4v
}

## Full Conversion on all channels, if WMV or DIVX or whatever, assumes audio is on second(1) stream
function ff264_full() {
  ffmpeg \
  -i $1 \
  -i $1 \
  -map 0:1 \
  -c:v:0 h264 \
  -map 0:0 \
  -c:a:0 ac3 \
  -map 1:1 \
  -c:a:1 libfdk_aac \
  -ac:2 2
  ${1:r}.m4v
}

## Full Audio Conversion, such as when the MKV
#  is a BluRay rip and only has DTS
function ff264_audio_full() {
  ffmpeg \
  -i $1 \
  -i $1 \
  -map 0:0 \
  -c:v:0 copy \
  -map 0:1 \
  -ac:1 2 \
  -c:a:0 libfdk_aac \
  -map 1:1 \
  -c:a:1 ac3
  ${1:r}.m4v
}
## Convert &amp;amp; Move functions
function cvmv_ff264_vac3() { ff264_vac3 $1 &amp;amp;&amp;amp; mvmedia ${1:r}.m4v }
function cvmv_ff264_ac3v() { ff264_ac3v $1 &amp;amp;&amp;amp; mvmedia ${1:r}.m4v }

# Batch convert &amp;amp; move files
for f in *.mkv; do ff264_vac3 $f &amp;amp;&amp;amp; mvmedia ${f:r}.m4v;  done
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;dts-bluray:26a07dde200fd0da08764cfe96545b35&#34;&gt;DTS/BluRay&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ffmpeg -i LongKissGoodnight.mkv
Stream #0:0(eng): Video: h264 (High), yuv420p, 1280x536, SAR 1:1 DAR 160:67, 23.98 fps, 23.98 tbr, 1k tbn, 47.95 tbc (default)
    Metadata:
      title           : The Long Kiss Goodnight (1996)
    Stream #0:1(eng): Audio: dts (DTS), 48000 Hz, 5.1(side), fltp, 1536 kb/s (default)
    Metadata:
      title           : DTS 5.1 1.5 Mbps
    Stream #0:2(eng): Subtitle: subrip

# AppleTV doesn&#39;t support DTS (does it?) so we output AAC (2ch) and AC3 (5.1)
$ ffmpeg -i LongKissGoodnight.mkv -i LongKissGoodnight.mkv \
  -map 0:0 -c:v:0 copy \
  -map 0:1 -ac:1 2 -c:a:0 libfdk_aac \
  -map 1:1 -c:a:1 ac3 LongKissGoodnight.m4v
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;concatenate-files:26a07dde200fd0da08764cfe96545b35&#34;&gt;Concatenate Files&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://trac.ffmpeg.org/wiki/How%20to%20concatenate%20(join,%20merge)%20media%20files&#34;&gt;https://trac.ffmpeg.org/wiki/How%20to%20concatenate%20(join,%20merge)%20media%20files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for f in *.wav; do echo &amp;quot;file &#39;$f&#39;&amp;quot; &amp;gt;&amp;gt; mylist.txt; done
ffmpeg -f concat -i mylist.txt -c copy output.wav
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install:26a07dde200fd0da08764cfe96545b35&#34;&gt;Install&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install ffmpeg \
--with-fdk-aac \
--with-ffplay \
--with-freetype \
--with-frei0r \
--with-libass \
--with-libcaca \
--with-libvo-aacenc \
--with-libvorbis \
--with-libvpx \
--with-opencore-amr \
--with-openjpeg \
--with-openssl \
--with-opus \
--with-rtmpdump \
--with-schroedinger \
--with-speex \
--with-theora \
--with-tools
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>MySQL Field Notes</title>
      <link>http://www.erebusbat.com/2012/09/mysql-field-notes/</link>
      <pubDate>Thu, 13 Sep 2012 20:51:28 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2012/09/mysql-field-notes/</guid>
      <description>

&lt;p&gt;Misc notes and snippets in a &lt;em&gt;Field Notes&lt;/em&gt; style&lt;/p&gt;

&lt;h2 id=&#34;create-db-user:a34e8838774afbd86c31d4cce476018f&#34;&gt;Create DB / User&lt;/h2&gt;

&lt;p&gt;Make sure the DB exists with a &amp;ldquo;mysqladmin create jira&amp;rdquo; first&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Create User
CREATE USER &#39;jira&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password&#39;;

-- Grant root on jira DB
GRANT ALL PRIVILEGES ON jira.* TO &#39;jira&#39;@&#39;localhost&#39; WITH GRANT OPTION;
FLUSH PRIVILEGES;

-- Grant root on all DBs/tables
GRANT ALL PRIVILEGES ON *.* TO &#39;jira&#39;@&#39;localhost&#39; WITH GRANT OPTION;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;dates:a34e8838774afbd86c31d4cce476018f&#34;&gt;Dates&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://dev.mysql.com/doc/refman/5.5/en/date-and-time-functions.html&#34;&gt;http://dev.mysql.com/doc/refman/5.5/en/date-and-time-functions.html&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT DATE_FORMAT(created_at,GET_FORMAT(DATE,&#39;USA&#39;)) FROM users ;
-- 12.07.2011
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;coderwalls:a34e8838774afbd86c31d4cce476018f&#34;&gt;Coderwalls&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://coderwall.com/p/gfwcfw&#34;&gt;Move Homebrew MySql datadir&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;commands:a34e8838774afbd86c31d4cce476018f&#34;&gt;Commands&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;use database;
drop user &#39;database&#39;@&#39;127.0.0.1&#39;;
show tables;
describe table;
select Host,User from user;
delete from user where Host=&#39;192.168.85.70&#39;;
FLUSH PRIVILEGES;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;update-user-passwords:a34e8838774afbd86c31d4cce476018f&#34;&gt;Update User Passwords&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;--# Method 1
use mysql;
SET PASSWORD FOR &#39;user-name-here&#39;@&#39;hostname-name-here&#39; = PASSWORD(&#39;new-password-here&#39;);

--# Method 2
UPDATE mysql.user SET Password=PASSWORD(&#39;new-password-here&#39;) WHERE User=&#39;user-name-here&#39; AND Host=&#39;host-name-here&#39;;
FLUSH PRIVILEGES;

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ZSH Field Notes</title>
      <link>http://www.erebusbat.com/2012/09/zsh-field-notes/</link>
      <pubDate>Tue, 04 Sep 2012 16:17:49 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2012/09/zsh-field-notes/</guid>
      <description>

&lt;p&gt;Misc notes and snippets in a &lt;em&gt;Field Notes&lt;/em&gt; style&lt;/p&gt;

&lt;h2 id=&#34;links:aa364d83240e3026be0190c02971a96d&#34;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cs.elte.hu/zsh-manual/zsh_12.html&#34;&gt;ZSH Conditional Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://zanshin.net/2013/09/03/how-to-use-homebrew-zsh-instead-of-max-os-x-default/&#34;&gt;http://zanshin.net/2013/09/03/how-to-use-homebrew-zsh-instead-of-max-os-x-default/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://linux-training.be/files/books/html/fun/index.html&#34;&gt; Some basic but good generic linux docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;path-expansion:aa364d83240e3026be0190c02971a96d&#34;&gt;Path Expansion&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/usr/bin/zsh
# test script
theVar=&#39;/bin/path/file.txt&#39;
echo ${theVar:e}    # txt
echo ${theVar:t}    # file.txt
echo ${theVar:r}    # /bin/path/file
echo ${theVar:h}    # /bin/path
echo ${theVar:h:h}  # /bin
echo ${theVar:t:r}  # file
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Flag&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;h&lt;/td&gt;
&lt;td&gt;Remove a trailing pathname component, leaving the head.  This works like `dirname&amp;rsquo;.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;Remove a filename extension of the form `.XXX&amp;rsquo;, leaving the root name.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;e&lt;/td&gt;
&lt;td&gt;Remove all but the extension.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;t&lt;/td&gt;
&lt;td&gt;Remove all leading pathname components, leaving the tail.  This works like `basename&amp;rsquo;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;loops:aa364d83240e3026be0190c02971a96d&#34;&gt;Loops&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# WHILE - Simple watch
while (sleep 60) do; clear; ./command; done
# FOR - Every file
for f in *.m4v; do mvmedia $f; done
for f in *.{html,sass}; do echo $f; done
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Dump MySQL table &#39;contents&#39; into development, every M5 /w messages
while (true) do;
  echo &amp;quot;Dumping $(date)...&amp;quot;;
  ssh prodsrv &amp;quot;mysqldump database_production contents&amp;quot; | mysql database_development;
  echo &amp;quot;    done&amp;quot;;
  sleep 300;
done
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Very simple benchmark
for i in {1..5}; do time echo &#39;exit&#39; | rails c production; done
for i in {1..5}; do time rake -T &amp;gt; /dev/null; done
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Process a subset of zero padded files, like D02S00.  03-13 in this example:
for s in `seq -f &amp;quot;%02g&amp;quot; 3 13`; do \
  task1.rb &amp;quot;IMG.D02S${s}.mkv&amp;quot; &amp;amp;&amp;amp; \
  task2 &amp;quot;IMG.D02S${s}.m4v&amp;quot;; done
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;regular-expressions-regex:aa364d83240e3026be0190c02971a96d&#34;&gt;Regular Expressions Regex&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ITEMS=(
  Desktop
  Pictures
  Backups
)
# Allow specifying items to select as $1, separated by a space (/ /),
if [[ ! -z $1 ]]; then
  # This will become an array
  SPECIFIED_ITEMS=(&amp;quot;${(s/ /)1}&amp;quot;)
  for i in $SPECIFIED_ITEMS; do
    # This syntax will remove the extension (r), then check the ITEMS
    # collection to get the index ($i), -1 if not found
    if [[ ${${ITEMS[(r)$i]}:--1} == &amp;quot;-1&amp;quot; ]]; then
      echo &amp;quot;*** ERROR: $i is not a valid item! Valid items are: $ITEMS&amp;quot;
      exit 1
    else
      # OK
    fi
  done
  ITEMS=$SPECIFIED_ITEMS
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;arrays:aa364d83240e3026be0190c02971a96d&#34;&gt;Arrays&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Allow specifying items to override as $1, separated by a space (/ /),
# check to make sure that said items are valid (appear in the ITEMS list).
URLS=(
  Desktop
  Pictures
  Backups
)

# Loop
for f in $URLS; do
  wget $f
done
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;hotkeys:aa364d83240e3026be0190c02971a96d&#34;&gt;Hotkeys&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://coderwall.com/p/a8uxma&#34;&gt;https://coderwall.com/p/a8uxma&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.geekmind.net/2011/01/shortcuts-to-improve-your-bash-zsh.html&#34;&gt;http://www.geekmind.net/2011/01/shortcuts-to-improve-your-bash-zsh.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;history:aa364d83240e3026be0190c02971a96d&#34;&gt;History&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/9502274/last-command-in-same-terminal&#34;&gt;http://stackoverflow.com/questions/9502274/last-command-in-same-terminal&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Don&#39;t share history between sessions
setopt no_share_history

# Share history between sessions
setopt share_history
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;passing-arguments-to-app:aa364d83240e3026be0190c02971a96d&#34;&gt;Passing Arguments to App&lt;/h3&gt;

&lt;p&gt;Below is a wrapper script that sources [[rbenv]] and passes ALL arguments (correctly) to the ruby script.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/zsh
export HOME=/Users/aburns
export PATH=$HOME/.rbenv/bin:$PATH
eval &amp;quot;$(rbenv init -)&amp;quot;
cd $HOME/bin/1.9.3
# echo -E ${(q)@}
ruby ./myIL.rb ${(Q)@}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
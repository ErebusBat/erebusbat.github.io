<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ErebusBat</title>
    <link>http://www.erebusbat.com/post/</link>
    <description>Recent content in Posts on ErebusBat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Aug 2015 09:42:56 -0600</lastBuildDate>
    <atom:link href="http://www.erebusbat.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>TMUX Login Wrapper Script</title>
      <link>http://www.erebusbat.com/2015/08/tmux-login-wrapper-script/</link>
      <pubDate>Wed, 26 Aug 2015 09:42:56 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2015/08/tmux-login-wrapper-script/</guid>
      <description>

&lt;p&gt;After watching a &lt;a href=&#34;https://www.youtube.com/watch?v=5r6yzFEXajQ&#34;&gt;talk on Vim &amp;amp; TMUX&lt;/a&gt; by &lt;a href=&#34;https://github.com/nicknisi&#34;&gt;Nick Nisi&lt;/a&gt; I was inspired to improve on his &lt;a href=&#34;https://github.com/nicknisi/dotfiles/blob/master/bin/tm&#34;&gt;tm script&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Like Nick&amp;rsquo;s original, my script allows me to easily attach to running tmux sessions and create ad hoc new onces. I then added the ability to list any &lt;a href=&#34;https://github.com/tmuxinator/tmuxinator&#34;&gt;tmuxinator&lt;/a&gt; configurations I have.&lt;/p&gt;

&lt;p&gt;I wanted a workflow where I could easily connect to existing tmux sessions, which Nick&amp;rsquo;s script did great.  However I am already a heavy Tmuxinator user and have several pre-defined configurations (as you can see).&lt;/p&gt;

&lt;p&gt;In the example gif video below you can see the general idea in action (forgive the horrid colors, that is another issue I am working on):&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.erebusbat.com/img/2015/201508-tmlogin.gif&#34; alt=&#34;gif&#34; /&gt;
&lt;/p&gt;

&lt;h1 id=&#34;login-shell:1d7a3107e57203900f6e4fc32eccbfc8&#34;&gt;Login Shell&lt;/h1&gt;

&lt;p&gt;I did set this up as my login shell, why?  Well with my current ZSH config it can take a second or two for my prompt to load.  I haven&amp;rsquo;t had time to track down why that is happening.  After my sessions are loaded then I am not spinning up that many shells.&lt;/p&gt;

&lt;p&gt;However waiting on my slow shell session startup just to turn around and launch tmux to launch more ZSH seemed like a waste. By setting &lt;code&gt;tmlogin&lt;/code&gt; as my login shell it spins up instantly.&lt;/p&gt;

&lt;p&gt;This did cause some minor problems, given that &lt;code&gt;tmlogin&lt;/code&gt; is really not a shell.  Exporting my real shell in &lt;code&gt;tmlogin&lt;/code&gt; seems to have fixed that.&lt;/p&gt;

&lt;p&gt;If you find it useful then please drop me a line, it is dirty and hacked together, but it works.&lt;/p&gt;

&lt;p&gt;You can view &lt;a href=&#34;https://gist.github.com/ErebusBat/dacc0bcd92d7aa1494f1&#34;&gt;the gist here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>More flexible tarsnap backups with a Makefile</title>
      <link>http://www.erebusbat.com/2015/08/more-flexible-tarsnap-backups-with-a-makefile/</link>
      <pubDate>Wed, 19 Aug 2015 13:26:07 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2015/08/more-flexible-tarsnap-backups-with-a-makefile/</guid>
      <description>

&lt;p&gt;Better tarsnap backup management by using a Makefile.&lt;/p&gt;

&lt;p&gt;Last time I &lt;a href=&#34;http://www.erebusbat.com/2015/08/two-days-with-tarsnap&#34;&gt;wrote about tarsnap&lt;/a&gt; I had just started using &lt;a href=&#34;https://github.com/miracle2k/tarsnapper&#34;&gt;Tarsnapper&lt;/a&gt;, which is an awesome wrapper around the even more awesome tarsnap utility.&lt;/p&gt;

&lt;p&gt;I found my scheduling and task management still slightly wanting, as I mentioned at the end of my last post.&lt;/p&gt;

&lt;p&gt;I decided to simplify (really it &lt;strong&gt;is&lt;/strong&gt; simpler, I promise!) by only having one crontab entry per timeframe (daily/hourly).&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t really foresee needing any less frequent backups than daily.  Tarsnap will store how ever long back I tell it to (via tarsnapper), the main reason is to not waste disk/time/bandwidth on things that are not as volatile and just don&amp;rsquo;t need to be backed up on a hourly schedule.&lt;/p&gt;

&lt;p&gt;I can easily add or remove targets as needed, or change behavior by simply editing the &lt;code&gt;Makefile&lt;/code&gt;.  This means I am only focusing on this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-makefile&#34;&gt;...
# Period based targets
daily: aab work notify
hourly: aab-hourly work-hourly notify

# Actual Targets
pers: personal
personal: aab-hourly

aab: aab-hourly aab-daily
aab-hourly:
	@$(call snaprun,aab-hour.conf,$(TARGET))
aab-daily:
	@$(call snaprun,aab-day.conf,$(TARGET))
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All the calling is abstracted out to the &lt;code&gt;snaprun&lt;/code&gt; user defined function in the makefile.&lt;/p&gt;

&lt;h1 id=&#34;scheduling:6dbc4d52f76daba0ff368d27de3be2ff&#34;&gt;Scheduling&lt;/h1&gt;

&lt;p&gt;My updated crontab looks something like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cron&#34;&gt;3 0-15,17-23 * * * /bin/bash -l -c &#39;cd /Users/ErebusBat/.tarsnap &amp;amp;&amp;amp; make hourly &amp;gt;&amp;gt; /Users/ErebusBat/.tarsnap/tarsnapper.log 2&amp;gt;&amp;amp;1&#39;
3 16         * * * /bin/bash -l -c &#39;cd /Users/ErebusBat/.tarsnap &amp;amp;&amp;amp; make daily  &amp;gt;&amp;gt; /Users/ErebusBat/.tarsnap/tarsnapper.log 2&amp;gt;&amp;amp;1&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Other than the time differences, the only change is the makefile target.&lt;/p&gt;

&lt;p&gt;I needed two different lines because I made the choice to have a daily backup imply an hourly backup.  This was so that I didn&amp;rsquo;t have two processes running at the same time.  Tarsnap would fail in that event and one of the backups would ultimately fail.&lt;/p&gt;

&lt;p&gt;I chose 4pm as my daily time because it provides the time when most of my daily work output would have been done AND the most likely time my laptop would still be on.  Sometimes if I take it home and then do not get on it then it would not be powered up for a late night backup.&lt;/p&gt;

&lt;p&gt;Another benefit of this design is my work back will run as soon as my personal backup is finished.  Before this change then, best case, my work backup would wait until the given time in cron to activate.  Worst case if my personal was not finished then the work backup would fail (due to an ongoing tarsnap transaction).&lt;/p&gt;

&lt;h1 id=&#34;manual:6dbc4d52f76daba0ff368d27de3be2ff&#34;&gt;Manual&lt;/h1&gt;

&lt;p&gt;Sometimes you make a change and you want it backed up right away.  I still have that ability:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TARGET=blog make aab work
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That will process only the tarsnapper &lt;code&gt;src&lt;/code&gt; target, regardless if it is personal or work, it might look something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;################################################################################
## Started aab-hourly - Wed Aug 19 13:52:09 MDT 2015
##     /Users/aburns/.tarsnap/conf.d/aab-hour.conf
################################################################################
Error: not defined in the config file: blog
############### END - aab-hourly - Wed Aug 19 13:52:09 MDT 2015



################################################################################
## Started aab-daily - Wed Aug 19 13:52:09 MDT 2015
##     /Users/aburns/.tarsnap/conf.d/aab-day.conf
################################################################################
Creating backup blog: /horcrux/blog-20150819-195209
3 backups are matching
1 of those can be deleted
Deleting /horcrux/blog-20150819-185254
############### END - aab-daily - Wed Aug 19 13:52:47 MDT 2015
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I got an error (that is why the &lt;code&gt;|| true&lt;/code&gt; is on the tarsnapper line in the makefile) because blog is only in the daily target.  But that is OK in this event.&lt;/p&gt;

&lt;h2 id=&#34;full-makefile:6dbc4d52f76daba0ff368d27de3be2ff&#34;&gt;Full Makefile&lt;/h2&gt;

&lt;p&gt;I am quite happy how this came out. I believe it is a perfect mixture of simplicity/power/flexability.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Makefile&#34;&gt;####################################################################
## Defines
####################################################################
HOME = /Users/ErebusBat
CONF_ROOT = $(HOME)/.tarsnap/conf.d
NOTIFY = /Users/ErebusBat/bin/notify
TARSNAPPER = /usr/local/bin/tarsnapper

################################################################################
## Targets
################################################################################
default: help
help:
	$(info $(HELPTEXT))
	@echo &amp;quot;&amp;quot;

# Period based targets
daily: aab work notify
hourly: aab-hourly work-hourly notify

# Actual Targets
pers: personal
personal: aab-hourly

aab: aab-hourly aab-daily
aab-hourly:
	@$(call snaprun,aab-hour.conf,$(TARGET))
aab-daily:
	@$(call snaprun,aab-day.conf,$(TARGET))


work: work-hourly work-daily
work-hourly:
	@$(call snaprun,work-hour.conf,$(TARGET))
work-daily:
	@$(call snaprun,work-day.conf,$(TARGET))

# Helpers
notify:
	$(NOTIFY) &#39;Tarsnap Backups Completed&#39;


####################################################################
## Functions
####################################################################

# snaprun [tarsnapper conf file] (tarsnapper targets)
define snaprun
	echo &amp;quot;\n\n&amp;quot;
	echo &amp;quot;################################################################################&amp;quot;
	echo &amp;quot;## Started $@ - $$(date)&amp;quot;
	echo &amp;quot;##     $(CONF_ROOT)/$(1)&amp;quot;
	echo &amp;quot;################################################################################&amp;quot;
	$(TARSNAPPER) -c $(CONF_ROOT)/$(1) make $(2) || true
	echo &amp;quot;############### END - $@ - $$(date)&amp;quot;
endef

define HELPTEXT
####################################################################
## Tarsnap / Tarsnapper Backup Manager
####################################################################

This Makefile manages tarsnap backups using tarsnapper job definitions.
The following targets are available:

TARGETS
        work = All work targets
 work-hourly = Only targets that should be backed up hourly
  work-daily = Only targets that should be backed up daily, impiles hourly

        aab = All aab targets
 aab-hourly = Only targets that should be backed up hourly
  aab-daily = Only targets that should be backed up daily, impiles hourly

      daily = All daily targets
     hourly = All hourly targets

CRONTAB
  You can call this makefile from crontab:

    3 0-15,17-23 * * * /bin/bash -l -c &#39;cd /Users/ErebusBat/.tarsnap &amp;amp;&amp;amp; make hourly &amp;gt;&amp;gt; /Users/ErebusBat/.tarsnap/tarsnapper.log 2&amp;gt;&amp;amp;1&#39;
    3 16 * * * /bin/bash -l -c &#39;cd /Users/ErebusBat/.tarsnap &amp;amp;&amp;amp; make daily &amp;gt;&amp;gt; /Users/ErebusBat/.tarsnap/tarsnapper.log 2&amp;gt;&amp;amp;1&#39;

	That will create a backup at three past the hour, with hourly backups being made every hour, except 4pm.  4:03 pm will create a daily backup (which implies an hourly backup)

	4pm was chosen as the most likley time the laptop would still be on.
endef
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://leanmarketing.ca/wp-content/uploads/2013/01/YO-DAWG-I-HEARD-YOU-LIKE-PROCESSES1.jpg&#34; alt=&#34;yo dawg&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Simple Wrapper around `hugo new`</title>
      <link>http://www.erebusbat.com/2015/08/simple-wrapper-around-hugo-new/</link>
      <pubDate>Mon, 17 Aug 2015 09:14:59 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2015/08/simple-wrapper-around-hugo-new/</guid>
      <description>&lt;p&gt;I am slightly anal about how my files are structured on disk.  To this end I like to date prefix my post files.  &lt;a href=&#34;http://hugo.io&#34;&gt;Hugo&lt;/a&gt; does not easily accommodate this and I found that it was causing me to not write blog posts or quick notes when I otherwise would have.&lt;/p&gt;

&lt;p&gt;To fix the issue I wrote a small little script: &lt;a href=&#34;https://github.com/ErebusBat/hublog/blob/e5c75ad4336a1f82443c7ece56f18d44eed0ba9b/script/newpost.zsh&#34;&gt;newpost.zsh&lt;/a&gt;.  I can either call it as a one off, or from a &lt;code&gt;make new&lt;/code&gt; to easily kick off new posts.&lt;/p&gt;

&lt;p&gt;It does require ZSH as I am using some of the nifty &lt;a href=&#34;http://zsh.sourceforge.net/Doc/Release/Expansion.html#Parameter-Expansion&#34;&gt;parameter expansion&lt;/a&gt; that is unique to ZSH.&lt;/p&gt;

&lt;p&gt;Here is an example of a &lt;code&gt;make new&lt;/code&gt; run, and the resulting output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make new
ASK=1 script/newpost.zsh
TITLE: Hello World

Listing existing post paths:
content
└── post
    ├── apple
    ├── dev
    ├── ffmpeg
    ├── fieldnotes
    ├── golang
    ├── linux
    ├── mssql
    ├── mysql
    ├── pgsql
    ├── rails
    ├── ruby
    └── tech

13 directories
PATH: dev
hugo new post/dev/2015-0817-hello_world.md
/data/src/hublog/content/post/dev/2015-0817-hello_world.md created

$ cat /data/src/hublog/content/post/dev/2015-0817-hello_world.md
+++
Draft = true
Tags = [&amp;quot;&amp;quot;]
date = &amp;quot;2015-08-17T09:24:01-06:00&amp;quot;
title = &amp;quot;2015 0817 hello_world&amp;quot;

+++

DO NOT FORGET TO FIX THE TITLE ABOVE

AboveFold

BelowFold
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see from the output (specificly &lt;code&gt;title&lt;/code&gt; in the post frontmatter) it isn&amp;rsquo;t a silver bullet; however it is MUCH easier to remove a date string and type a post title than it is with the inverse.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>tarsnap field notes</title>
      <link>http://www.erebusbat.com/2015/08/tarsnap-field-notes/</link>
      <pubDate>Sat, 15 Aug 2015 07:02:24 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2015/08/tarsnap-field-notes/</guid>
      <description>

&lt;p&gt;My Tarsnap field notes&lt;/p&gt;

&lt;h2 id=&#34;tarsnap:ea69290aa401e179885ab9a1d841c360&#34;&gt;Tarsnap&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Listing archives stored with tarsnap
$ tarsnap --list-archives | sort

# Searching for a file in a backup archive:
$ tarsnap -t -f dotfiles-20150815-120404 | grep &#39;.tmux&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;my-specifics:ea69290aa401e179885ab9a1d841c360&#34;&gt;My Specifics&lt;/h2&gt;

&lt;p&gt;These are notes that are specific to &lt;a href=&#34;http://www.erebusbat.com/2015/08/two-days-with-tarsnap&#34;&gt;my setup&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# View previous backup history
$ grep -E &#39;^(Not|Creating)&#39; ~/.tarsnap/tarsnapper.log | tail -n 25
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Two days with tarsnap</title>
      <link>http://www.erebusbat.com/2015/08/two-days-with-tarsnap/</link>
      <pubDate>Sat, 15 Aug 2015 06:38:32 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2015/08/two-days-with-tarsnap/</guid>
      <description>

&lt;p&gt;I have been using &lt;a href=&#34;https://www.tarsnap.com&#34;&gt;Tarsnap&lt;/a&gt; in &amp;lsquo;production&amp;rsquo; for two full days now.&lt;/p&gt;

&lt;p&gt;And by production I mean it has been running on my laptop mostly without intervention.&lt;/p&gt;

&lt;p&gt;And by mostly without intervention I mean that I have only had to touch it either out of curiosity or to add missing content.&lt;/p&gt;

&lt;h2 id=&#34;workflow:84f8bed04f63ea3e57f753f8618bbe2d&#34;&gt;Workflow&lt;/h2&gt;

&lt;p&gt;I have compiled &lt;a href=&#34;http://www.erebusbat.com/2015/08/tarsnap-field-notes/&#34;&gt;a page just for tarsnap field notes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Although tarsnap can easily be run as a one off command or a very custom command in my crontab, it because quickly obvious that this would not scale or maintain well.&lt;/p&gt;

&lt;p&gt;This led me to &lt;a href=&#34;https://github.com/miracle2k/tarsnapper&#34;&gt;Tarsnapper&lt;/a&gt; which is a wrapper around tarsnap which does two things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Lets you define &amp;ldquo;backup jobs&amp;rdquo; (tarsnap invocations) in a config file,
though on it&amp;rsquo;s own this has little advantage over just using a a shell
script.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The ability to expire old backups using a Grandfather-father-son backup
scheme. This feature can be used in conjunction with tarsnapper
backup jobs, or standalone, to be applied to any existing set of
tarsnap backup archives, regardless of how they have been created.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Currently I have two tarsnapper config files, one for work files and one for personal files, that are invoked via my crontab at three and seven past the hour:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-crontab&#34;&gt;# Personal
3 * * * * /bin/bash -l -c &#39;/usr/local/bin/tarsnapper -c /Users/erebusbat/.tarsnap/tarsnapper.conf make &amp;gt;&amp;gt; /Users/erebusbat/.tarsnap/tarsnapper.log 2&amp;gt;&amp;amp;1&#39;

# Work
7 * * * * /bin/bash -l -c &#39;/usr/local/bin/tarsnapper -c /Users/erebusbat/.tarsnap/tarsnapper-whf.conf make &amp;gt;&amp;gt; /Users/erebusbat/.tarsnap/tarsnapper.log 2&amp;gt;&amp;amp;1&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This workflow has worked quite well for the past two days.  I am easily able to pop into one of my tarsnapper config files and tweak a backup target or even add a new one and the next hour it will be in the backup. Tarsnapper appears to be doing a good job at rotating the backups on the schedules i have defined.&lt;/p&gt;

&lt;h2 id=&#34;downsides-changes:84f8bed04f63ea3e57f753f8618bbe2d&#34;&gt;Downsides / Changes&lt;/h2&gt;

&lt;p&gt;The biggest downside so far is that tarsnapper wraps (and therefore hides) raw tarsnap output (like &lt;code&gt;--print-stats&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;The biggest change i am considering at the moment is adding a daily crontab for less volatile targets.  I have not decided if I want to add something like bi-daily, daily, weekly, etc&amp;hellip;&lt;/p&gt;

&lt;p&gt;At the longer ranges I am not sure the bandwidth savings would warrant the extra complexity.&lt;/p&gt;

&lt;p&gt;I also have no automated error checking, so if I mess up a directory or tarsnapper config it might skip a whole target :(.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Get Wunderlist List IDs for Launch Center Pro</title>
      <link>http://www.erebusbat.com/2015/08/get-wunderlist-list-ids-for-launch-center-pro/</link>
      <pubDate>Thu, 06 Aug 2015 13:02:09 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2015/08/get-wunderlist-list-ids-for-launch-center-pro/</guid>
      <description>&lt;p&gt;If you use &lt;a href=&#34;https://itunes.apple.com/us/app/launch-center-pro/id532016360?mt=8&#34;&gt;LaunchCenter Pro&lt;/a&gt; on iOS then you know that you can create an action to open &lt;a href=&#34;https://www.wunderlist.com/&#34;&gt;Wunderlist&lt;/a&gt; to a specific list.  This is very useful as my wife and I use Wunderlist for shared shopping lists.&lt;/p&gt;

&lt;p&gt;There is a minor difficulty when setting up the action:  Getting the list ID.  LaunchCenter Pro&amp;rsquo;s suggestion is to publish the list and then unpublished it to get the ID.  This method does not work for lists shared with you, the publish option is disabled.&lt;/p&gt;

&lt;p&gt;However if you have access to a browser you can use this oneliner of JavaScript in your browser&amp;rsquo;s console and it will output all of your lists and their corresponding ID numbers.&lt;/p&gt;

&lt;p&gt;I used Firefox 39.0 with Firebug, but YMMV; however I would think that it should work with any modern browser console.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;jQuery(&#39;li.list&#39;).each(function(i,e){
  e = jQuery(e);
  str = &amp;quot;#&amp;quot; + i + &amp;quot;\t&amp;quot; + e.attr(&#39;rel&#39;) + &amp;quot;\t&amp;quot; + e.attr(&#39;aria-label&#39;); console.log(str);
})
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Install TinyTDS Gem on OSX 10.10 Yosemite</title>
      <link>http://www.erebusbat.com/2015/08/install-tinytds-gem-on-osx-10.10-yosemite/</link>
      <pubDate>Tue, 04 Aug 2015 13:29:12 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2015/08/install-tinytds-gem-on-osx-10.10-yosemite/</guid>
      <description>

&lt;p&gt;There are a couple of &lt;a href=&#34;http://stackoverflow.com/questions/26613673/error-installing-tiny-tds-on-osx-10-10-yosemite&#34;&gt;howtos&lt;/a&gt; out there on how to fix the dreaded &lt;strong&gt;ERROR: Failed to build gem native extension.&lt;/strong&gt; when running &lt;code&gt;gem install tiny_tds&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This one will fix it without having to force link &lt;code&gt;libiconv&lt;/code&gt; which is not a good thing to do.&lt;/p&gt;

&lt;h3 id=&#34;prerequisites:405ae8145516492c8d939bdd28513b34&#34;&gt;Prerequisites&lt;/h3&gt;

&lt;p&gt;First you want to make sure that you have &lt;code&gt;freetds&lt;/code&gt; and &lt;code&gt;libiconv&lt;/code&gt; installed in &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;.  I already had these installed so YMMV on this step:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install libiconv
brew install freetds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is normal for &lt;code&gt;libiconv&lt;/code&gt; to complain that it is keg only, that is the whole point.&lt;/p&gt;

&lt;h3 id=&#34;install-tiny-tds:405ae8145516492c8d939bdd28513b34&#34;&gt;Install tiny_tds&lt;/h3&gt;

&lt;p&gt;Now it is just a simply matter of telling &lt;code&gt;gem install&lt;/code&gt; where &lt;code&gt;libiconv&lt;/code&gt; and &lt;code&gt;freetds&lt;/code&gt; are located.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gem install tiny_tds -- --with-iconv-dir=$(brew --prefix libiconv) \
  --with-freetds-dir=$(brew --prefix freetds)
Building native extensions.  This could take a while...
Successfully installed tiny_tds-0.6.2
1 gem installed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: Do &lt;em&gt;not&lt;/em&gt; forget the double hyphen (&lt;code&gt;--&lt;/code&gt;) between the gem install
command and the options.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL Delete with JOIN and alias</title>
      <link>http://www.erebusbat.com/2015/07/mysql-delete-with-join-and-alias/</link>
      <pubDate>Thu, 02 Jul 2015 14:49:48 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2015/07/mysql-delete-with-join-and-alias/</guid>
      <description>&lt;p&gt;Delete from an aliased table with a join.  Just make sure to use the table
alias after the delete statement: &lt;code&gt;DELETE c&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will delete any customers who do not have both a &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Draw&lt;/code&gt; record&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;DELETE C
FROM customers C
    LEFT OUTER JOIN users U ON C.number=U.customer_number
WHERE C.number NOT IN (
    SELECT DISTINCT customer_number FROM customer_draws WHERE customer_number IS NOT NULL
)
AND U.id IS NULL;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It can be simplified by using another &lt;code&gt;OUTER&lt;/code&gt; join:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;DELETE C
FROM customers C
    LEFT OUTER JOIN users U ON C.number=U.customer_number
    LEFT OUTER JOIN customer_draws CD ON C.number=CD.customer_number
WHERE
    U.id IS NULL AND  -- No User Record
    CD.id IS NULL;    -- No Draw Record
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Rails: Allow users to use asterisks as wildcards.</title>
      <link>http://www.erebusbat.com/2015/07/rails-allow-users-to-use-asterisks-as-wildcards./</link>
      <pubDate>Wed, 01 Jul 2015 10:17:12 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2015/07/rails-allow-users-to-use-asterisks-as-wildcards./</guid>
      <description>

&lt;p&gt;Simple method that iterates a hash and any string values that contain an asterisk
are changed to a percent sign.  It will &lt;em&gt;not&lt;/em&gt; iterate to sub hashes.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def fix_asterisks hash
  hash = hash.dup
  hash.each_pair do |key, val|
    if val.is_a?(String) &amp;amp;&amp;amp; val =~ /\*/
      hash[key] = val.gsub(/\*/, &#39;%&#39;)
    end
  end
end

def controller_action
  query = QueryObject.new(fix_asterisks(params[:query]))
end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;examples:340c4c4ca88c80de8fce1a1ce85fedac&#34;&gt;Examples&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def controller_action
  query = QueryObject.new(fix_asterisks(params[:query]))
  ...

  # params[:query][:last_name] = &amp;quot;smith*&amp;quot;
  p query.last_name
  # =&amp;gt; &amp;quot;smith%&amp;quot;

  # params[:query][:last_name] = &amp;quot;smith%&amp;quot;
  p query.last_name
  # =&amp;gt; &amp;quot;smith%&amp;quot;

  # params[:query][:days] = &amp;quot;13&amp;quot;
  p query.days
  # =&amp;gt; &amp;quot;13&amp;quot;
  ...

  objs = Customer.where([&#39;last_name like ?&#39;, query.last_name])
end
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>App won&#39;t Install with Apple Configurator</title>
      <link>http://www.erebusbat.com/2015/06/app-wont-install-with-apple-configurator/</link>
      <pubDate>Mon, 29 Jun 2015 10:10:26 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2015/06/app-wont-install-with-apple-configurator/</guid>
      <description>&lt;p&gt;Recently at work we had the need to provision roughly ten iPads in a secure way for a single app usage scenario.&lt;/p&gt;

&lt;p&gt;I was making good progress using &lt;a href=&#34;https://itunes.apple.com/us/app/apple-configurator/id434433123?mt=12&#34;&gt;Apple Configurator&lt;/a&gt; (AC) to lock down the iPad.  Then all of the sudden my app wouldn&amp;rsquo;t install on the iPad, despite being very clearly checked on the &lt;em&gt;App&lt;/em&gt; tab of the AC interface.&lt;/p&gt;

&lt;p&gt;This was especially troubling because it had worked just the day before.&lt;/p&gt;

&lt;p&gt;After some looking around I found the culprit.  Due to my over zealousness I i had changed a very innocuous feature that prevented &lt;em&gt;any&lt;/em&gt; apps from being installed, even ones I specified in AC.&lt;/p&gt;

&lt;p&gt;The offending setting is configured in the &lt;em&gt;Restrictions&lt;/em&gt; payload, under the &lt;em&gt;Media Content&lt;/em&gt; section there is a drown down for App ratings.  A quick and naive reading of that section might think that is just for downloading apps; however it will also block AC from installing them as well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.erebusbat.com/img/2015/06-AC-no-apps.png&#34; alt=&#34;AC No Apps&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Changing the setting back to &lt;em&gt;Allow All Apps&lt;/em&gt; and a quick refresh in AC later and my app appeared as expected.&lt;/p&gt;

&lt;p&gt;I am OK leaving this setting as it because there is another setting under the &lt;em&gt;Apps&lt;/em&gt; tab that disables the App Store altogether.  When enabled the App Store icon doesn&amp;rsquo;t even appear on the device.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.erebusbat.com/img/2015/06-AC-no-app-store.png&#34; alt=&#34;AC No App Store&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dumping Character Codes in Go</title>
      <link>http://www.erebusbat.com/2015/03/dumping-character-codes-in-go/</link>
      <pubDate>Sun, 08 Mar 2015 08:07:13 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2015/03/dumping-character-codes-in-go/</guid>
      <description>

&lt;p&gt;While iterating file names on my OSX system I noticed that I could not do conditional matching the the &lt;code&gt;Icon?&lt;/code&gt; file, which is used to store custom icons for the Mac OSX Finder.&lt;/p&gt;

&lt;p&gt;Turns out that OSX appends a CR (yes a carriage return) at the end of the file name.  WTF?&lt;/p&gt;

&lt;p&gt;Anyway&amp;hellip; I ended up with this small snippet of code to dump char codes of a string to the console that has no business remaining in the original project.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func DumpString(str string) {
  for _, c := range str {
    fmt.Printf(&amp;quot;&amp;gt;%s&amp;lt; %d\n&amp;quot;, string(c), c)
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;example:1a90af6c5b320cda1ae891e245fd4f54&#34;&gt;Example&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go run main.go
&amp;gt;H&amp;lt; 72
&amp;gt;e&amp;lt; 101
&amp;gt;l&amp;lt; 108
&amp;gt;l&amp;lt; 108
&amp;gt;o&amp;lt; 111
&amp;gt; &amp;lt; 32
&amp;gt;W&amp;lt; 87
&amp;gt;o&amp;lt; 111
&amp;gt;r&amp;lt; 114
&amp;gt;l&amp;lt; 108
&amp;gt;d&amp;lt; 100
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;full-script:1a90af6c5b320cda1ae891e245fd4f54&#34;&gt;Full Script&lt;/h3&gt;

&lt;p&gt;A full script / application example (copy paste ready).&lt;br /&gt;
Assumes the file is named &lt;code&gt;dump_char_codes.go&lt;/code&gt;, update static string in &lt;code&gt;log.Fatalf&lt;/code&gt; call for clarity if needed.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
	&amp;quot;fmt&amp;quot;
	&amp;quot;log&amp;quot;
	&amp;quot;os&amp;quot;
)

func dumpString(str string) {
	for _, c := range str {
		fmt.Printf(&amp;quot;&amp;gt;%s&amp;lt; %d\n&amp;quot;, string(c), c)
	}
}

func main() {
	if len(os.Args) != 2 {
		log.Fatalf(&amp;quot;USAGE: dump_char_codes [string]&amp;quot;)
	}
	dumpString(os.Args[1])
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Embed SASS in HAML</title>
      <link>http://www.erebusbat.com/2015/03/embed-sass-in-haml/</link>
      <pubDate>Wed, 04 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.erebusbat.com/2015/03/embed-sass-in-haml/</guid>
      <description>&lt;p&gt;Sometimes it is necessary to add CSS styling tags directly into HAML content.  I am forever forgetting the proper way to do this.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-haml&#34;&gt;%style{type:&#39;text/css&#39;}
  :sass
    .bundle_logo
      background: url(logo.jpg) no-repeat scroll left top transparent
      height: 133px
      width: 128px
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>PostgreSQL Field Notes</title>
      <link>http://www.erebusbat.com/2014/06/postgresql-field-notes/</link>
      <pubDate>Fri, 27 Jun 2014 21:17:59 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2014/06/postgresql-field-notes/</guid>
      <description>&lt;p&gt;PostgreSQL Field Notes&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ export PGDATA=/usr/local/var/postgres
$ pg_ctl status
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>initdb.txt pgsql initdb</title>
      <link>http://www.erebusbat.com/2014/06/initdb.txt-pgsql-initdb/</link>
      <pubDate>Fri, 27 Jun 2014 21:10:29 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2014/06/initdb.txt-pgsql-initdb/</guid>
      <description>

&lt;h2 id=&#34;postgresql:a6f8c6d51de4deb2312555679b437def&#34;&gt;PostgreSQL&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.postgresql.org/docs/9.4/static/app-initdb.html&#34;&gt;http://www.postgresql.org/docs/9.4/static/app-initdb.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;initdb&lt;/code&gt; creates a new PostgreSQL database cluster. A database cluster is a collection of databases that are managed by a single server instance.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;initdb&lt;/code&gt; must be run as the user that will own the server process, because the server needs to have access to the files and directories that initdb creates.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ initdb -D /usr/local/var/postgres                                                                       The files belonging to this database system will be owned by user &amp;quot;aburns&amp;quot;.
This user must also own the server process.

The database cluster will be initialized with locale &amp;quot;en_US.UTF-8&amp;quot;.
The default database encoding has accordingly been set to &amp;quot;UTF8&amp;quot;.
The default text search configuration will be set to &amp;quot;english&amp;quot;.

Data page checksums are disabled.

fixing permissions on existing directory /usr/local/var/postgres ... ok
creating subdirectories ... ok
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
creating configuration files ... ok
creating template1 database in /usr/local/var/postgres/base/1 ... ok
initializing pg_authid ... ok
initializing dependencies ... ok
creating system views ... ok
loading system objects&#39; descriptions ... ok
creating collations ... ok
creating conversions ... ok
creating dictionaries ... ok
setting privileges on built-in objects ... ok
creating information schema ... ok
loading PL/pgSQL server-side language ... ok
vacuuming database template1 ... ok
copying template1 to template0 ... ok
copying template1 to postgres ... ok
syncing data to disk ... ok

WARNING: enabling &amp;quot;trust&amp;quot; authentication for local connections
You can change this by editing pg_hba.conf or using the option -A, or
--auth-local and --auth-host, the next time you run initdb.

Success. You can now start the database server using:

    postgres -D /usr/local/var/postgres
or
    pg_ctl -D /usr/local/var/postgres -l logfile start
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>AWK Field Notes</title>
      <link>http://www.erebusbat.com/2014/06/awk-field-notes/</link>
      <pubDate>Thu, 19 Jun 2014 13:52:50 -0600</pubDate>
      
      <guid>http://www.erebusbat.com/2014/06/awk-field-notes/</guid>
      <description>

&lt;p&gt;Misc notes and snippets in a &lt;em&gt;Field Notes&lt;/em&gt; style&lt;/p&gt;

&lt;h4 id=&#34;links:6929c066a1635d550302642d3d7c34ff&#34;&gt;Links&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/a/6546314/3683&#34;&gt;http://stackoverflow.com/a/6546314/3683&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;quick:6929c066a1635d550302642d3d7c34ff&#34;&gt;Quick&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Get amount of free mem (in -m MB)
$ free -m | grep -E &#39;^Mem&#39; | awk &#39;{print $4}&#39;
$ free -m | awk &#39;/^Mem/ {print $4}&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>